/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jabed' at '11/14/15 7:37 PM' with Gradle 2.8
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.8/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

// The Java plugin adds Java compilation along with testing and bundling capabilities to a project
apply plugin: 'java'
// The Eclipse plugins generate files used by Eclipse,  making it possible to import project into Eclipse.
apply plugin: 'eclipse'
//The Application plugin facilitates creating an executable JVM application. 
apply plugin: 'application'


sourceSets {
    main {
        java { srcDir 'src' }
        resources { srcDir 'src' }
    }

    test {
        resources { srcDir 'test' }
    }
}

// mainClassName = 'package.mainClassName'
mainClassName = 'hello.HelloWorld'

// tag::repositories[]
// Usually, a Java project will have some dependencies on external JAR files.  Gradle searches here for them
repositories {
    mavenCentral()
    jcenter()
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'dl-hello-world'
    version =  '0.1.0'
}
// end::jar[]

// tag::dependencies[]
sourceCompatibility = 1.7
targetCompatibility = 1.7

// joda-time provides the time stamping used in HelloWorld.java
// junit is to run the TestGreeter.java and others
dependencies {
    compile "joda-time:joda-time:2.2"
    compile "org.junit.jupiter:junit-jupiter-api:5.0.1"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.1"

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0'
    )
}
// end::dependencies[]

test {
    useJUnitPlatform()
}

// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}
// end::wrapper[]
